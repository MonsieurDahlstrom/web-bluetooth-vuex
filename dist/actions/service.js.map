{"version":3,"sources":["../../src/actions/service.js"],"names":["MutationTypes","ServiceActions","webBluetoothDiscoverServices","query","dispatch","commit","console","log","discoveredServices","services","undefined","device","gatt","getPrimaryServices","service","push","getPrimaryService","BLE_SERVICES_DISCOVERED"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;IAAYA,a;;;;;;AAEZ,IAAMC,iBAAiB;AACfC,8BADe;AAAA,kGACqCC,KADrC;AAAA,UACiBC,QADjB,QACiBA,QADjB;AAAA,UAC2BC,MAD3B,QAC2BA,MAD3B;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEnBC,sBAAQC,GAAR,CAAY,8BAAZ;AACIC,gCAHe,GAGM,EAHN;;AAAA,oBAIfL,MAAMM,QAAN,KAAmBC,SAJJ;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAKIP,MAAMQ,MAAN,CAAaC,IAAb,CAAkBC,kBAAlB,EALJ;;AAAA;AAKbJ,sBALa;AAAA;AAAA;AAAA;AAAA;;AAMjB,0DAAoBA,QAApB,qGAA8B;AAArBK,uBAAqB;;AAC5BV,yBAAS,qCAAT,EAA+C,EAACU,SAASA,OAAV,EAA/C;AACAN,mCAAmBO,IAAnB,CAAwBD,OAAxB;AACD;AATgB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAWGX,MAAMM,QAXT;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWRK,sBAXQ;AAAA;AAAA,qBAYKX,MAAMQ,MAAN,CAAaC,IAAb,CAAkBI,iBAAlB,CAAoCF,SAApC,CAZL;;AAAA;AAYXA,uBAZW;;AAafV,uBAAS,qCAAT,EAA+C,EAACU,SAASA,SAAV,EAA/C;AACAN,iCAAmBO,IAAnB,CAAwBD,SAAxB;;AAde;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAiBnBT,qBAAOL,cAAciB,uBAArB,EAA8C,EAACR,UAAUD,kBAAX,EAA9C;;AAjBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAvB;;kBAqBeP,c","file":"service.js","sourcesContent":["import * as MutationTypes from '../mutation-types'\n\nconst ServiceActions = {\n  async webBluetoothDiscoverServices ({ dispatch, commit }, query) {\n    console.log('webBluetoothDiscoverServices')\n    let discoveredServices = []\n    if (query.services === undefined) {\n      var services = await query.device.gatt.getPrimaryServices()\n      for (var service of services) {\n        dispatch('webBluetoothDiscoverCharacteristics',{service: service})\n        discoveredServices.push(service)\n      }\n    } else {\n      for (let service of query.services) {\n        let service = await query.device.gatt.getPrimaryService(service)\n        dispatch('webBluetoothDiscoverCharacteristics',{service: service})\n        discoveredServices.push(service)\n      }\n    }\n    commit(MutationTypes.BLE_SERVICES_DISCOVERED, {services: discoveredServices})\n  }\n}\n\nexport default ServiceActions\n"]}