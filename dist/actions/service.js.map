{"version":3,"sources":["../../src/actions/service.js"],"names":["MutationTypes","ServiceActions","webBluetoothDiscoverServices","query","dispatch","commit","discoveredServices","device","gatt","getPrimaryServices","services","service","BLE_SERVICE_ADDED","webBluetoothDiscoverService","getPrimaryService","uuid","webBluetoothRemoveService","GattServiceAddedCallback","GattServiceChangedCallback","GattServiceRemovedCallback","BLE_SERVICE_REMOVED"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;IAAYA,a;;;;;;AAEZ,IAAMC,iBAAiB;AAEfC,8BAFe;AAAA,kGAEqCC,KAFrC;AAAA,UAEiBC,QAFjB,QAEiBA,QAFjB;AAAA,UAE2BC,MAF3B,QAE2BA,MAF3B;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAGfC,gCAHe,GAGM,EAHN;AAAA;AAAA,qBAIEH,MAAMI,MAAN,CAAaC,IAAb,CAAkBC,kBAAlB,EAJF;;AAAA;AAIfC,sBAJe;AAAA;AAAA;AAAA;AAAA;;AAKnB,0DAAoBA,QAApB,qGAA8B;AAArBC,uBAAqB;;AAC5BP,yBAAS,qCAAT,EAA+C,EAACO,SAASA,OAAV,EAA/C;AACAN,uBAAOL,cAAcY,iBAArB,EAAwCD,OAAxC;AACD;AARkB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAWfE,6BAXe;AAAA,oGAWoCV,KAXpC;AAAA,UAWgBC,QAXhB,SAWgBA,QAXhB;AAAA,UAW0BC,MAX1B,SAW0BA,MAX1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAYCF,MAAMI,MAAN,CAAaC,IAAb,CAAkBM,iBAAlB,CAAoCX,MAAMY,IAA1C,CAZD;;AAAA;AAYfJ,qBAZe;;AAanB,kBAAIA,OAAJ,EAAa;AACXP,yBAAS,qCAAT,EAA+C,EAACO,SAASA,OAAV,EAA/C;AACAN,uBAAOL,cAAcY,iBAArB,EAAwCD,OAAxC;AACD;;AAhBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAmBfK,2BAnBe;AAAA,oGAmBkCL,OAnBlC;AAAA,UAmBcP,QAnBd,SAmBcA,QAnBd;AAAA,UAmBwBC,MAnBxB,SAmBwBA,MAnBxB;AAAA;AAAA;AAAA;AAAA;AAoBnB,kBAAIM,OAAJ,EAAa;AACX,oBAAIA,QAAQM,wBAAZ,EAAsC,CAErC;AACD,oBAAIN,QAAQO,0BAAZ,EAAwC,CAEvC;AACD,oBAAIP,QAAQQ,0BAAZ,EAAwC,CAEvC;AACDf,yBAAS,mCAAT,EAA6C,EAACO,SAASA,OAAV,EAA7C;AACAN,uBAAOL,cAAcoB,mBAArB,EAA0CT,OAA1C;AACD;;AAhCkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAvB;;kBAqCeV,c","file":"service.js","sourcesContent":["import * as MutationTypes from '../mutation-types'\r\n\r\nconst ServiceActions = {\r\n\r\n  async webBluetoothDiscoverServices ({ dispatch, commit }, query) {\r\n    let discoveredServices = []\r\n    var services = await query.device.gatt.getPrimaryServices()\r\n    for (var service of services) {\r\n      dispatch('webBluetoothDiscoverCharacteristics',{service: service})\r\n      commit(MutationTypes.BLE_SERVICE_ADDED, service)\r\n    }\r\n  },\r\n\r\n  async webBluetoothDiscoverService ({ dispatch, commit }, query) {\r\n    let service = await query.device.gatt.getPrimaryService(query.uuid)\r\n    if (service) {\r\n      dispatch('webBluetoothDiscoverCharacteristics',{service: service})\r\n      commit(MutationTypes.BLE_SERVICE_ADDED, service)\r\n    }\r\n  },\r\n\r\n  async webBluetoothRemoveService ({ dispatch, commit }, service) {\r\n    if (service) {\r\n      if (service.GattServiceAddedCallback) {\r\n\r\n      }\r\n      if (service.GattServiceChangedCallback) {\r\n\r\n      }\r\n      if (service.GattServiceRemovedCallback) {\r\n\r\n      }\r\n      dispatch('webBluetoothRemoveCharacteristics',{service: service})\r\n      commit(MutationTypes.BLE_SERVICE_REMOVED, service)\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default ServiceActions\r\n"]}