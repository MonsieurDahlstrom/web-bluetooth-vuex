{"version":3,"sources":["../../src/actions/characteristic.js"],"names":["MutationTypes","CharacteristicActions","webBluetoothDiscoverCharacteristics","query","dispatch","commit","discoveredCharacteristics","characteristics","undefined","service","getCharacteristics","characteristic","push","characteristicUUID","getCharacteristic","BLE_CHARACTERISTICS_DISCOVERED","webBluetoothConfigureCharacteristic","properties","read","notify","indicate","addEventListener","readValue","startNotifications","BLE_CHARACTERISTIC_CHANGED","webBluetoothWriteCharacteristic","writeValue","value","console","error","webBluetoothUpdateCharacteristic"],"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","file":"characteristic.js","sourcesContent":["import * as MutationTypes from '../mutation-types'\n\nconst CharacteristicActions = {\n  async webBluetoothDiscoverCharacteristics({ dispatch, commit }, query) {\n    let discoveredCharacteristics = []\n    if (query.characteristics === undefined) {\n      var characteristics = await query.service.getCharacteristics()\n      for (var characteristic of characteristics) {\n        await dispatch('webBluetoothConfigureCharacteristic', {characteristic: characteristic})\n        discoveredCharacteristics.push(characteristic)\n      }\n    } else {\n      for (let characteristicUUID of query.characteristics) {\n        var characteristic = await query.service.getCharacteristic(characteristicUUID)\n        await dispatch('webBluetoothConfigureCharacteristic', {characteristic: characteristic})\n        discoveredCharacteristics.push(characteristic)\n      }\n    }\n    commit(MutationTypes.BLE_CHARACTERISTICS_DISCOVERED,discoveredCharacteristics)\n  },\n  async webBluetoothConfigureCharacteristic({ dispatch, commit }, query) {\n    let characteristic = query.characteristic\n    if(characteristic.properties.read || characteristic.properties.notify || characteristic.properties.indicate) {\n      characteristic.addEventListener('characteristicvaluechanged', event => {\n        dispatch('webBluetoothUpdateCharacteristic', {characteristic: query.characteristic})\n      })\n    }\n    if (characteristic.properties.read) {\n      await characteristic.readValue()\n    }\n    if (characteristic.properties.notify || characteristic.properties.indicate) {\n      await characteristic.startNotifications()\n    }\n    commit(MutationTypes.BLE_CHARACTERISTIC_CHANGED, characteristic)\n  },\n  async webBluetoothWriteCharacteristic({ dispatch, commit }, query) {\n    try {\n      await query.characteristic.writeValue(query.value)\n    } catch (e) {\n      console.error(e)\n    } finally {\n      commit(MutationTypes.BLE_CHARACTERISTIC_CHANGED, query.characteristic)\n    }\n  },\n  async webBluetoothUpdateCharacteristic({ dispatch, commit }, query) {\n    commit(MutationTypes.BLE_CHARACTERISTIC_CHANGED, query.characteristic)\n  }\n}\n\nexport default CharacteristicActions\n"]}