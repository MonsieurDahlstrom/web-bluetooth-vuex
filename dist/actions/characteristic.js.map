{"version":3,"sources":["../../src/actions/characteristic.js"],"names":["MutationTypes","CharacteristicActions","webBluetoothDiscoverCharacteristics","query","dispatch","commit","discoveredCharacteristics","characteristics","undefined","service","getCharacteristics","characteristic","push","characteristicUUID","getCharacteristic","BLE_CHARACTERISTICS_DISCOVERED","webBluetoothConfigureCharacteristic","properties","read","notify","indicate","addEventListener","value","event","target","readValue","startNotifications","BLE_CHARACTERISTIC_CHANGED","webBluetoothWriteCharacteristic","webBluetoothUpdateCharacteristic"],"mappings":"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","file":"characteristic.js","sourcesContent":["import * as MutationTypes from '../mutation-types'\r\n\r\nconst CharacteristicActions = {\r\n  async webBluetoothDiscoverCharacteristics({ dispatch, commit }, query) {\r\n    let discoveredCharacteristics = []\r\n    if (query.characteristics === undefined) {\r\n      var characteristics = await query.service.getCharacteristics()\r\n      for (var characteristic of characteristics) {\r\n        dispatch('webBluetoothConfigureCharacteristic', {characteristic: characteristic})\r\n        discoveredCharacteristics.push(characteristic)\r\n      }\r\n    } else {\r\n      for (let characteristicUUID of query.characteristics) {\r\n        var characteristic = await query.service.getCharacteristic(characteristicUUID)\r\n        dispatch('webBluetoothConfigureCharacteristic', {characteristic: characteristic})\r\n        discoveredCharacteristics.push(characteristic)\r\n      }\r\n    }\r\n    commit(MutationTypes.BLE_CHARACTERISTICS_DISCOVERED, {characteristics: discoveredCharacteristics})\r\n  },\r\n  async webBluetoothConfigureCharacteristic({ dispatch, commit }, query) {\r\n    let characteristic = query.characteristic\r\n    if(characteristic.properties.read || characteristic.properties.notify || characteristic.properties.indicate) {\r\n      characteristic.addEventListener('characteristicvaluechanged', event => {\r\n        dispatch('webBluetoothUpdateCharacteristic', {characteristic: characteristic, value: event.target.value})\r\n      })\r\n    }\r\n    if (characteristic.properties.read) {\r\n      await characteristic.readValue()\r\n    }\r\n    if (characteristic.properties.notify || characteristic.properties.indicate) {\r\n      await characteristic.startNotifications()\r\n    }\r\n    commit(MutationTypes.BLE_CHARACTERISTIC_CHANGED, {characteristic: characteristic})\r\n  },\r\n  async webBluetoothWriteCharacteristic({ dispatch, commit }, query) {\r\n  },\r\n  async webBluetoothUpdateCharacteristic({ dispatch, commit }, query) {\r\n  },\r\n}\r\n\r\nexport default CharacteristicActions\r\n"]}