{"version":3,"sources":["../../src/actions/characteristic.js"],"names":["MutationTypes","CharacteristicActions","webBluetoothDiscoverCharacteristics","query","dispatch","commit","console","log","discoveredCharacteristics","characteristics","undefined","service","getCharacteristics","characteristic","push","characteristicUUID","getCharacteristic","BLE_CHARACTERISTICS_DISCOVERED","webBluetoothConfigureCharacteristic","properties","read","notify","indicate","addEventListener","value","event","target","readValue","startNotifications","BLE_CHARACTERISTIC_CHANGED","webBluetoothWriteCharacteristic","webBluetoothUpdateCharacteristic"],"mappings":"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","file":"characteristic.js","sourcesContent":["import * as MutationTypes from '../mutation-types'\n\nconst CharacteristicActions = {\n  async webBluetoothDiscoverCharacteristics({ dispatch, commit }, query) {\n    console.log('webBluetoothDiscoverCharacteristics')\n    let discoveredCharacteristics = []\n    if (query.characteristics === undefined) {\n      var characteristics = await query.service.getCharacteristics()\n      for (var characteristic of characteristics) {\n        dispatch('webBluetoothConfigureCharacteristic', {characteristic: characteristic})\n        discoveredCharacteristics.push(characteristic)\n      }\n    } else {\n      for (let characteristicUUID of query.characteristics) {\n        var characteristic = await query.service.getCharacteristic(characteristicUUID)\n        dispatch('webBluetoothConfigureCharacteristic', {characteristic: characteristic})\n        discoveredCharacteristics.push(characteristic)\n      }\n    }\n    commit(MutationTypes.BLE_CHARACTERISTICS_DISCOVERED, {characteristics: discoveredCharacteristics})\n  },\n  async webBluetoothConfigureCharacteristic({ dispatch, commit }, query) {\n    console.log('webBluetoothConfigureCharacteristic')\n    let characteristic = query.characteristic\n    if(characteristic.properties.read || characteristic.properties.notify || characteristic.properties.indicate) {\n      characteristic.addEventListener('characteristicvaluechanged', event => {\n        dispatch('webBluetoothUpdateCharacteristic', {characteristic: characteristic, value: event.target.value})\n      })\n    }\n    if (characteristic.properties.read) {\n      await characteristic.readValue()\n    }\n    if (characteristic.properties.notify || characteristic.properties.indicate) {\n      await characteristic.startNotifications()\n    }\n    commit(MutationTypes.BLE_CHARACTERISTIC_CHANGED, {characteristic: characteristic})\n  },\n  async webBluetoothWriteCharacteristic({ dispatch, commit }, query) {\n  },\n  async webBluetoothUpdateCharacteristic({ dispatch, commit }, query) {\n  },\n}\n\nexport default CharacteristicActions\n"]}