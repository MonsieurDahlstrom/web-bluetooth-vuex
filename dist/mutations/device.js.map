{"version":3,"sources":["../../src/mutations/device.js"],"names":["MutationTypes","DeviceMutatations","BLE_DEVICE_ADDED","state","payload","deviceIndex","devices","indexOf","device","push","splice","BLE_DEVICE_REMOVED","services","filter","service","characteristics","include","characteristic","characteristicIndex","serviceIndex","BLE_DEVICE_UPDATED"],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;AACA;;IAAYA,a;;;;;;AAEZ,IAAMC,gGACHD,cAAcE,gBADX,YAC8BC,KAD9B,EACqCC,OADrC,EAC8C;AAChD,MAAMC,cAAcF,MAAMG,OAAN,CAAcC,OAAd,CAAsBH,QAAQI,MAA9B,CAApB;AACA,MAAIH,cAAc,CAAlB,EAAqB;AACnBF,UAAMG,OAAN,CAAcG,IAAd,CAAmBL,QAAQI,MAA3B;AACD,GAFD,MAEO;AACLL,UAAMG,OAAN,CAAcI,MAAd,CAAqBL,WAArB,EAAiC,CAAjC,EAAmCD,QAAQI,MAA3C;AACD;AACF,CARG,qDASHR,cAAcW,kBATX,YASgCR,KAThC,EASuCC,OATvC,EASgD;AAClD,MAAMC,cAAcF,MAAMG,OAAN,CAAcC,OAAd,CAAsBH,QAAQI,MAA9B,CAApB;AACA,MAAII,WAAWT,MAAMS,QAAN,CAAeC,MAAf,CAAsB;AAAA,WAAWC,QAAQN,MAAR,KAAmBJ,QAAQI,MAAtC;AAAA,GAAtB,CAAf;AACA,MAAIO,kBAAkBZ,MAAMY,eAAN,CAAsBF,MAAtB,CAA6B;AAAA,WAAkBD,SAASI,OAAT,CAAiBC,eAAeH,OAAhC,CAAlB;AAAA,GAA7B,CAAtB;AAHkD;AAAA;AAAA;;AAAA;AAIlD,oDAAsBC,eAAtB,4GAAuC;AAAnCE,oBAAmC;;AACrC,UAAIC,sBAAsBf,MAAMY,eAAN,CAAsBR,OAAtB,CAA8BU,cAA9B,CAA1B;AACAd,YAAMY,eAAN,CAAsBL,MAAtB,CAA6BQ,mBAA7B,EAAiD,CAAjD;AACD;AAPiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAQlD,qDAAeN,QAAf,iHAAyB;AAArBE,aAAqB;;AACvB,UAAIK,eAAehB,MAAMS,QAAN,CAAeL,OAAf,CAAuBO,OAAvB,CAAnB;AACAX,YAAMS,QAAN,CAAeF,MAAf,CAAsBS,YAAtB,EAAmC,CAAnC;AACD;AAXiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYlDhB,QAAMG,OAAN,CAAcI,MAAd,CAAqBL,WAArB,EAAkC,CAAlC;AACD,CAtBG,qDAuBHL,cAAcoB,kBAvBX,YAuBgCjB,KAvBhC,EAuBuCC,OAvBvC,EAuBgD;AAClD,MAAMC,cAAcF,MAAMG,OAAN,CAAcC,OAAd,CAAsBH,QAAQI,MAA9B,CAApB;AACA,MAAIH,cAAc,CAAlB,EAAqB;AACnBF,UAAMG,OAAN,CAAcG,IAAd,CAAmBL,QAAQI,MAA3B;AACD,GAFD,MAEO;AACLL,UAAMG,OAAN,CAAcI,MAAd,CAAqBL,WAArB,EAAiC,CAAjC,EAAmCD,QAAQI,MAA3C;AACD;AACF,CA9BG,sBAAN;;kBAiCeP,iB","file":"device.js","sourcesContent":["import Vue from 'vue'\r\nimport * as MutationTypes from '../mutation-types'\r\n\r\nconst DeviceMutatations = {\r\n  [MutationTypes.BLE_DEVICE_ADDED] (state, payload) {\r\n    const deviceIndex = state.devices.indexOf(payload.device)\r\n    if (deviceIndex < 0) {\r\n      state.devices.push(payload.device)\r\n    } else {\r\n      state.devices.splice(deviceIndex,1,payload.device)\r\n    }\r\n  },\r\n  [MutationTypes.BLE_DEVICE_REMOVED] (state, payload) {\r\n    const deviceIndex = state.devices.indexOf(payload.device)\r\n    let services = state.services.filter(service => service.device === payload.device)\r\n    let characteristics = state.characteristics.filter(characteristic => services.include(characteristic.service))\r\n    for(characteristic of characteristics) {\r\n      let characteristicIndex = state.characteristics.indexOf(characteristic)\r\n      state.characteristics.splice(characteristicIndex,1)\r\n    }\r\n    for(service of services) {\r\n      let serviceIndex = state.services.indexOf(service)\r\n      state.services.splice(serviceIndex,1)\r\n    }\r\n    state.devices.splice(deviceIndex, 1)\r\n  },\r\n  [MutationTypes.BLE_DEVICE_UPDATED] (state, payload) {\r\n    const deviceIndex = state.devices.indexOf(payload.device)\r\n    if (deviceIndex < 0) {\r\n      state.devices.push(payload.device)\r\n    } else {\r\n      state.devices.splice(deviceIndex,1,payload.device)\r\n    }\r\n  }\r\n}\r\n\r\nexport default DeviceMutatations\r\n"]}