{"version":3,"sources":["../../src/mutations/service.js"],"names":["MutationTypes","ServiceMutatations","BLE_SERVICE_ADDED","state","service","serviceIndex","services","indexOf","push","splice","BLE_SERVICE_CHANGED","BLE_SERVICE_REMOVED","characteristics","filter","characteristic","characteristicIndex"],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;AACA;;IAAYA,a;;;;;;AAEZ,IAAMC,mGAEHD,cAAcE,iBAFX,YAE+BC,KAF/B,EAEsCC,OAFtC,EAE+C;AACjD,MAAIA,OAAJ,EAAa;AACX,QAAIC,eAAeF,MAAMG,QAAN,CAAeC,OAAf,CAAuBH,OAAvB,CAAnB;AACA,QAAIC,eAAe,CAAnB,EAAsB;AACpBF,YAAMG,QAAN,CAAeE,IAAf,CAAoBJ,OAApB;AACD,KAFD,MAEO;AACLD,YAAMG,QAAN,CAAeG,MAAf,CAAsBJ,YAAtB,EAAmC,CAAnC,EAAqCD,OAArC;AACD;AACF;AACF,CAXG,sDAaHJ,cAAcU,mBAbX,YAaiCP,KAbjC,EAawCC,OAbxC,EAaiD;AACnD,MAAIA,OAAJ,EAAa;AACX,QAAIC,eAAeF,MAAMG,QAAN,CAAeC,OAAf,CAAuBH,OAAvB,CAAnB;AACA,QAAIC,YAAJ,EAAkB;AAChBF,YAAMG,QAAN,CAAeG,MAAf,CAAsBJ,YAAtB,EAAmC,CAAnC,EAAsCD,OAAtC;AACD;AACF;AACF,CApBG,sDAsBHJ,cAAcW,mBAtBX,YAsBiCR,KAtBjC,EAsBwCC,OAtBxC,EAsBiD;AACnD,MAAIA,OAAJ,EAAa;AACX,QAAIQ,kBAAkBT,MAAMS,eAAN,CAAsBC,MAAtB,CAA6B;AAAA,aAAkBT,YAAYU,eAAeV,OAA7C;AAAA,KAA7B,CAAtB;AADW;AAAA;AAAA;;AAAA;AAEX,sDAAsBQ,eAAtB,4GAAuC;AAAnCE,sBAAmC;;AACrC,YAAIC,sBAAsBZ,MAAMS,eAAN,CAAsBL,OAAtB,CAA8BO,cAA9B,CAA1B;AACAX,cAAMS,eAAN,CAAsBH,MAAtB,CAA6BM,mBAA7B,EAAiD,CAAjD;AACD;AALU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMX,QAAIV,eAAeF,MAAMG,QAAN,CAAeC,OAAf,CAAuBH,OAAvB,CAAnB;AACAD,UAAMG,QAAN,CAAeG,MAAf,CAAsBJ,YAAtB,EAAmC,CAAnC;AACD;AACF,CAhCG,uBAAN;kBAmCeJ,kB","file":"service.js","sourcesContent":["import Vue from 'vue'\nimport * as MutationTypes from '../mutation-types'\n\nconst ServiceMutatations = {\n\n  [MutationTypes.BLE_SERVICE_ADDED] (state, service) {\n    if (service) {\n      var serviceIndex = state.services.indexOf(service)\n      if (serviceIndex < 0) {\n        state.services.push(service)\n      } else {\n        state.services.splice(serviceIndex,1,service)\n      }\n    }\n  },\n\n  [MutationTypes.BLE_SERVICE_CHANGED] (state, service) {\n    if (service) {\n      var serviceIndex = state.services.indexOf(service)\n      if (serviceIndex) {\n        state.services.splice(serviceIndex,1, service)\n      }\n    }\n  },\n\n  [MutationTypes.BLE_SERVICE_REMOVED] (state, service) {\n    if (service) {\n      let characteristics = state.characteristics.filter(characteristic => service === characteristic.service)\n      for(characteristic of characteristics) {\n        let characteristicIndex = state.characteristics.indexOf(characteristic)\n        state.characteristics.splice(characteristicIndex,1)\n      }\n      var serviceIndex = state.services.indexOf(service)\n      state.services.splice(serviceIndex,1)\n    }\n  }\n\n}\nexport default ServiceMutatations\n"]}